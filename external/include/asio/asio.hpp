//
// asio.hpp
// ~~~~~~~~
//
// Copyright (c) 2003-2023 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef ASIO_HPP
#define ASIO_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include "any_completion_executor.hpp"
#include "any_completion_handler.hpp"
#include "any_io_executor.hpp"
#include "append.hpp"
#include "as_tuple.hpp"
#include "associated_allocator.hpp"
#include "associated_cancellation_slot.hpp"
#include "associated_executor.hpp"
#include "associated_immediate_executor.hpp"
#include "associator.hpp"
#include "async_result.hpp"
#include "awaitable.hpp"
#include "basic_datagram_socket.hpp"
#include "basic_deadline_timer.hpp"
#include "basic_file.hpp"
#include "basic_io_object.hpp"
#include "basic_random_access_file.hpp"
#include "basic_raw_socket.hpp"
#include "basic_readable_pipe.hpp"
#include "basic_seq_packet_socket.hpp"
#include "basic_serial_port.hpp"
#include "basic_signal_set.hpp"
#include "basic_socket.hpp"
#include "basic_socket_acceptor.hpp"
#include "basic_socket_iostream.hpp"
#include "basic_socket_streambuf.hpp"
#include "basic_stream_file.hpp"
#include "basic_stream_socket.hpp"
#include "basic_streambuf.hpp"
#include "basic_waitable_timer.hpp"
#include "basic_writable_pipe.hpp"
#include "bind_allocator.hpp"
#include "bind_cancellation_slot.hpp"
#include "bind_executor.hpp"
#include "bind_immediate_executor.hpp"
#include "buffer.hpp"
#include "buffer_registration.hpp"
#include "buffered_read_stream_fwd.hpp"
#include "buffered_read_stream.hpp"
#include "buffered_stream_fwd.hpp"
#include "buffered_stream.hpp"
#include "buffered_write_stream_fwd.hpp"
#include "buffered_write_stream.hpp"
#include "buffers_iterator.hpp"
#include "cancellation_signal.hpp"
#include "cancellation_state.hpp"
#include "cancellation_type.hpp"
#include "co_spawn.hpp"
#include "completion_condition.hpp"
#include "compose.hpp"
#include "connect.hpp"
#include "connect_pipe.hpp"
#include "consign.hpp"
#include "coroutine.hpp"
#include "deadline_timer.hpp"
#include "defer.hpp"
#include "deferred.hpp"
#include "detached.hpp"
#include "dispatch.hpp"
#include "error.hpp"
#include "error_code.hpp"
#include "execution.hpp"
#include "execution/allocator.hpp"
#include "execution/any_executor.hpp"
#include "execution/blocking.hpp"
#include "execution/blocking_adaptation.hpp"
#include "execution/bulk_execute.hpp"
#include "execution/bulk_guarantee.hpp"
#include "execution/connect.hpp"
#include "execution/context.hpp"
#include "execution/context_as.hpp"
#include "execution/execute.hpp"
#include "execution/executor.hpp"
#include "execution/invocable_archetype.hpp"
#include "execution/mapping.hpp"
#include "execution/occupancy.hpp"
#include "execution/operation_state.hpp"
#include "execution/outstanding_work.hpp"
#include "execution/prefer_only.hpp"
#include "execution/receiver.hpp"
#include "execution/receiver_invocation_error.hpp"
#include "execution/relationship.hpp"
#include "execution/schedule.hpp"
#include "execution/scheduler.hpp"
#include "execution/sender.hpp"
#include "execution/set_done.hpp"
#include "execution/set_error.hpp"
#include "execution/set_value.hpp"
#include "execution/start.hpp"
#include "execution_context.hpp"
#include "executor.hpp"
#include "executor_work_guard.hpp"
#include "file_base.hpp"
#include "generic/basic_endpoint.hpp"
#include "generic/datagram_protocol.hpp"
#include "generic/raw_protocol.hpp"
#include "generic/seq_packet_protocol.hpp"
#include "generic/stream_protocol.hpp"
#include "handler_alloc_hook.hpp"
#include "handler_continuation_hook.hpp"
#include "handler_invoke_hook.hpp"
#include "high_resolution_timer.hpp"
#include "io_context.hpp"
#include "io_context_strand.hpp"
#include "io_service.hpp"
#include "io_service_strand.hpp"
#include "ip/address.hpp"
#include "ip/address_v4.hpp"
#include "ip/address_v4_iterator.hpp"
#include "ip/address_v4_range.hpp"
#include "ip/address_v6.hpp"
#include "ip/address_v6_iterator.hpp"
#include "ip/address_v6_range.hpp"
#include "ip/network_v4.hpp"
#include "ip/network_v6.hpp"
#include "ip/bad_address_cast.hpp"
#include "ip/basic_endpoint.hpp"
#include "ip/basic_resolver.hpp"
#include "ip/basic_resolver_entry.hpp"
#include "ip/basic_resolver_iterator.hpp"
#include "ip/basic_resolver_query.hpp"
#include "ip/host_name.hpp"
#include "ip/icmp.hpp"
#include "ip/multicast.hpp"
#include "ip/resolver_base.hpp"
#include "ip/resolver_query_base.hpp"
#include "ip/tcp.hpp"
#include "ip/udp.hpp"
#include "ip/unicast.hpp"
#include "ip/v6_only.hpp"
#include "is_applicable_property.hpp"
#include "is_contiguous_iterator.hpp"
#include "is_executor.hpp"
#include "is_read_buffered.hpp"
#include "is_write_buffered.hpp"
#include "local/basic_endpoint.hpp"
#include "local/connect_pair.hpp"
#include "local/datagram_protocol.hpp"
#include "local/seq_packet_protocol.hpp"
#include "local/stream_protocol.hpp"
#include "multiple_exceptions.hpp"
#include "packaged_task.hpp"
#include "placeholders.hpp"
#include "posix/basic_descriptor.hpp"
#include "posix/basic_stream_descriptor.hpp"
#include "posix/descriptor.hpp"
#include "posix/descriptor_base.hpp"
#include "posix/stream_descriptor.hpp"
#include "post.hpp"
#include "prefer.hpp"
#include "prepend.hpp"
#include "query.hpp"
#include "random_access_file.hpp"
#include "read.hpp"
#include "read_at.hpp"
#include "read_until.hpp"
#include "readable_pipe.hpp"
#include "recycling_allocator.hpp"
#include "redirect_error.hpp"
#include "registered_buffer.hpp"
#include "require.hpp"
#include "require_concept.hpp"
#include "serial_port.hpp"
#include "serial_port_base.hpp"
#include "signal_set.hpp"
#include "signal_set_base.hpp"
#include "socket_base.hpp"
#include "static_thread_pool.hpp"
#include "steady_timer.hpp"
#include "strand.hpp"
#include "stream_file.hpp"
#include "streambuf.hpp"
#include "system_context.hpp"
#include "system_error.hpp"
#include "system_executor.hpp"
#include "system_timer.hpp"
#include "this_coro.hpp"
#include "thread.hpp"
#include "thread_pool.hpp"
#include "time_traits.hpp"
#include "use_awaitable.hpp"
#include "use_future.hpp"
#include "uses_executor.hpp"
#include "version.hpp"
#include "wait_traits.hpp"
#include "windows/basic_object_handle.hpp"
#include "windows/basic_overlapped_handle.hpp"
#include "windows/basic_random_access_handle.hpp"
#include "windows/basic_stream_handle.hpp"
#include "windows/object_handle.hpp"
#include "windows/overlapped_handle.hpp"
#include "windows/overlapped_ptr.hpp"
#include "windows/random_access_handle.hpp"
#include "windows/stream_handle.hpp"
#include "writable_pipe.hpp"
#include "write.hpp"
#include "write_at.hpp"

#endif // ASIO_HPP
